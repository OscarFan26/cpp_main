//
// Created by Oscar Fan on 2022/3/6.
//
// 某校大门外长度为L的马路上有一排树，每两棵相邻的树之间的间隔都是1米。我们
//可以把马路看成一个数轴，马路的一端在数轴0的位置，另一端在L的位置；数轴上的每个整数点，
//即0，1，2，……，L，都种有一棵树。由于马路上有一些区域要用来建地铁。这些区域用它们在数轴上
//的起始点和终止点表示。已知任一区域的起始点和终止点的坐标都是整数，区域之间可能有重合的部分。
//现在要把这些区域中的树（包括区域端点处的两棵树）移走。你的任务是计算将这些树都移走后，马路上
//还有多少棵树。
//输入描述：第一行有两个整数L（1 <= L <= 10000）和 M（1 <= M <= 100），L代表马路的长度，M代表区域的数目，
//L和M之间用一个空格隔开。接下来的M行每行包含两个不同的整数，用一个空格隔开，表示一个区域的起始点和终止点的坐标。
//对于20%的数据，区域之间没有重合的部分；
//对于其它的数据，区域之间有重合的情况。
//输出描述：包括一行，这一行只包含一个整数，表示马路上剩余的树的数目。
#include<iostream>
using namespace std;

int main()
{
    int L, M, c = 0;
    cin >> L;  //马路的长度
    cin >> M;  //多少个区域
    int K[10000] = { 0 };
    int J[100];
    int N[100];
    for (int i = 0;i < M;i++)
    {   cin >> J[i];//起始区域
        cin >> N[i];//结束区域
        for (int j = J[i]; j < N[i] + 1; j++){
            K[j] = 1;
        }
    }
    for (int i = 0; i < L+1; i++){
        if (K[i] ==1)
            c = c + 1;
    }
    cout << L - c + 1<< endl;
    return 0;
}