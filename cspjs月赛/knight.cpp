/*
    By Oscar Fan
    Date: 2024/6/22
    File: knight.cpp
*/
#include <bits/stdc++.h>

int main() {
    std::freopen("knight.in", "r", stdin);
    std::freopen("knight.out", "w", stdout);
  int t;
  std::cin >> t;
  std::vector<std::pair<int, int>> possibilities = {
          {-6, -3}, {-6, -1}, {-6, 1},  {-6, 3},  {-5, -4}, {-5, -2}, {-5, 0},  {-5, 2},  {-5, 4},  {-4, -5}, {-4, -3},
          {-4, -1}, {-4, 1},  {-4, 3},  {-4, 5},  {-3, -6}, {-3, -4}, {-3, -2}, {-3, 0},  {-3, 2},  {-3, 4},  {-3, 6},
          {-2, -5}, {-2, -3}, {-2, -1}, {-2, 1},  {-2, 3},  {-2, 5},  {-1, -6}, {-1, -4}, {-1, -2}, {-1, 0},  {-1, 2},
          {-1, 4},  {-1, 6},  {0, -5},  {0, -3},  {0, -1},  {0, 1},   {0, 3},   {0, 5},   {1, -6},  {1, -4},  {1, -2},
          {1, 0},   {1, 2},   {1, 4},   {1, 6},   {2, -5},  {2, -3},  {2, -1},  {2, 1},   {2, 3},   {2, 5},   {3, -6},
          {3, -4},  {3, -2},  {3, 0},   {3, 2},   {3, 4},   {3, 6},   {4, -5},  {4, -3},  {4, -1},  {4, 1},   {4, 3},
          {4, 5},   {5, -4},  {5, -2},  {5, 0},   {5, 2},   {5, 4},   {6, -3},  {6, -1},  {6, 1},   {6, 3},   {-3, 2},
          {-3, 4},  {-3, 6},  {-2, -5}, {-2, -3}, {-2, -1}, {-2, 1},  {-2, 3},  {-2, 5},  {-1, -6}, {-1, -4}, {-1, -2},
          {-1, 0},  {-1, 2},  {-1, 4},  {-1, 6},  {0, -5},  {0, -3},  {0, -1},  {0, 1},   {0, 3},   {0, 5},   {1, -6},
          {1, -4},  {1, -2},  {1, 0},   {1, 2},   {1, 4},   {1, 6},   {2, -5},  {2, -3},  {2, -1},  {2, 1},   {2, 3},
          {2, 5},   {3, -6},  {3, -4},  {3, -2},  {3, -2},  {3, 0},   {3, 2},   {3, 4},   {3, 6},   {4, -5},  {4, -3},
          {4, -1},  {4, 1},   {4, 3},   {4, 5},   {5, -4},  {5, -2},  {5, 0},   {5, 2},   {5, 4},   {6, -3},  {6, -1},
          {6, 1},   {6, 3},
  };
  for (int i = 0; i < t; i++) {
    int x, y;
    bool succeed = false;
    std::cin >> x >> y;
    for (auto each: possibilities) {
      if (std::pair<int, int>{x, y} == each) { std::cout << "YES\n"; succeed= true; break; }
    }
    if (!succeed) std::cout << "NO\n";
  }
    std::fclose(stdin);
    std::fclose(stdout);
  return 0;
}
